name = "arbitragex-mev-workers"
main = "src/index.ts"
compatibility_date = "2024-01-15"
node_compat = true

[vars]
API_VERSION = "3.6.0"
RUST_ENGINE_URL = "https://mev-engine.arbitragex.io"
MAX_REQUESTS_PER_MINUTE = "100"
CACHE_TTL_OPPORTUNITIES = "5"
CACHE_TTL_ASSETS = "300"
CACHE_TTL_CONFIG = "60"

[[kv_namespaces]]
binding = "CACHE_KV"
id = "arbitragex_cache"
preview_id = "arbitragex_cache_preview"

[[kv_namespaces]]
binding = "RATE_LIMIT_KV"
id = "arbitragex_rate_limit"
preview_id = "arbitragex_rate_limit_preview"

[[kv_namespaces]]
binding = "CONFIG_KV"
id = "arbitragex_config"
preview_id = "arbitragex_config_preview"

[[d1_databases]]
binding = "DB"
database_name = "arbitragex-db"
database_id = "arbitragex-d1-production"

[[durable_objects.bindings]]
name = "WEBSOCKET_HANDLER"
class_name = "WebSocketHandler"

[[migrations]]
tag = "v1"
new_classes = ["WebSocketHandler"]

[env.production]
vars = { ENVIRONMENT = "production" }
route = { pattern = "api.arbitragex.io/*", zone_name = "arbitragex.io" }

[env.staging]
vars = { ENVIRONMENT = "staging" }
route = { pattern = "staging-api.arbitragex.io/*", zone_name = "arbitragex.io" }

[[rules]]
type = "RateLimit"
match = "/api/opportunities"
limit = { requests_per_minute = 120 }

[[rules]]
type = "RateLimit"
match = "/api/executions"
limit = { requests_per_minute = 60 }

[[rules]]
type = "RateLimit"
match = "/api/config"
limit = { requests_per_minute = 30 }

[build]
command = "npm run build"

[observability]
enabled = true

[[analytics_engine_datasets]]
binding = "METRICS"